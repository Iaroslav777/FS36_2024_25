//1. .find() Знайдіть перший елемент масиву чисел, який більший за 30

const arr1 = [3, 77, 5, 0, -5, 333];
const res1 = arr1.find((a) => a > 30);
console.log("//1. .find() більший за 30\n", res1);

//2. .random() Виведіть випадковий елемент з масиву імен

const a2 = ["Олена", "Петро", "Степан", "Ярослав"];
let arr2Length = a2.length;
const r2 = a2[Math.floor(Math.random() * arr2Length)];
console.log("\n//2. .random() з масиву імен\n", a2, "\n", r2);

//3. .findIndex() Визначте індекс першого елемента '5' в масиві чисел

const el = 5;
const a3 = [3, 77, 5, 0, -5, 333];
const r3 = a3.findIndex((e, i) => e === el);
console.log("\n//3. .findIndex() індекс першого елемента '5'", a3, "\n", r3);

//4. .indexOf() Знайдіть індекс першої зустрічі елемента "Львів" в масиві

const a4 = ["Київ", "Харьків", "Львів", "Маріуполь", "Львів"];
const r4 = a4.indexOf("Львів");
console.log("\n//4. .indexOf() індекс першого елемента Львів", a4, "\n", r4);

//5. .lastIndexOf() Знайдіть індекс останньої зустрічі числа 8 в масиві чисел

const a5 = [0, 8, 7, 1, 8];
const r5 = a5.lastIndexOf(8);
console.log("\n//5. .lastIndexOf() індекс останньої 8", a5, "\n", r5);

//6. .sort() Відсортуйте масив імен в зворотньому алфавітному порядку

const a6 = ["cccc", "dddd", "aaaa", "bbbbb"];
a6.sort().reverse(); //модифікував отсортувавши та перевернувши оригінальний масив
console.log("\n//6. .sort() в зворотньому алфавітному порядку", a6);

//7. .reverse() Переверніть порядок елементів у масиві чисел

const a7 = [0, 8, 7, 1, 8];
a7.reverse
console.log("\n//7. .lastIndexOf() Переверніть порядок\n[0, 8, 7, 1, 8]", a7);

//8. .filter() Відфільтруйте масив чисел, залишивши тільки ті, що діляться на 5

const a8 = [456, 8, 10, 55, 865, 7, 67];
const r8 = a8.filter((e) => e % 5 === 0);
console.log("\n//8. .filter() залишивши, що діляться на 5", a8, "\n", r8);

//9. .some() Перевірте, чи є в масиві чисел хоча б одне число більше за 555

const a9 = [456, 8, 10, 55, 865, 7, 67];
const r9 = a9.some((e) => e > 555);
console.log("\n//9. .some() хоча б одне число більше за 555", a9, "\n", r9);

//10. .every() Перевірте, чи всі елементи в масиві чисел є парними

const a10 = [456, 8, 10, 55, 865, 7, 67];
const r10 = a10.every((e) => e % 2 === 0);
console.log("\n//10. .some() хоча б одне число більше за 555", a10, "\n", r10);

//11. .includes() Перевірте, чи містить масив імен ім'я "Ярослав"

const a11 = ["Олена", "Петро", "Степан", "Ярослав"];
const r11 = a11.includes("Ярослав");
console.log("\n//11. .include() чи містить масив ім'я Ярослав", a11, "\n", r11);

//12. .flat() Вирівняйте масив масивів чисел в один рівень

const a12 = [6, [7, [8, [9, [10]]]]];
const r12 = a12.flat(Infinity);
console.log(
  "\n//12. .flat() Вирівняйте масив масивів в один рівень\n[6,[7,[8,[9,[10]]]]]",
  "\n",
  r12
);

//13. .concat() Об'єднайте два масиви імен в один

const a13 = ["Олена", "Петро"];
const b13 = ["Степан", "Ярослав"];
const r13 = a13.concat(b13);
console.log(
  '\n//13. .concat() \n["Олена", "Петро"] + ["Степан", "Ярослав"]\n',
  r13
);

//14. .entries() роблю ітератор і вивожу пари [індекс,значення]
console.log(
  "\n//14. .entries() роблю ітератор і вивожу пари [індекс,значення]\n",
  r13
);
const a14 = ["Олена", "Петро", "Степан", "Ярослав"];
const iter = a14.entries();
for (let [ind, el] of iter) {
  console.log(ind, el);
}

//15. .toString() Перетворіть масив чисел у строку

const a15 = [5, 6, 7, 8, 9, 10];
const r15 = a15.toString();
console.log("\n//15. .toString() масив чисел у строку", a15, "\n", r15);

//16. .map() Створіть новий масив, у якому кожне число
//           з оригінального масиву буде помножене на 100

const a16 = [45.6, 0.008, 10, 55, 865, 7.9, 67];
const r16 = a16.map((e) => e * 100);
console.log("\n//16. . ", a16, "\n", r16);
